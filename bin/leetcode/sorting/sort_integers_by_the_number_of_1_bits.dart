void main() {
  print(sortByBits([0,1,2,3,4,5,6,7,8]));
}

List<int> sortByBits(List<int> arr) {
  // Функция, которая считает количество единиц в двоичном представлении числа
  int countOnesInBinary(int n) {
    int count = 0;
    while (n != 0) {
      count += n & 1;
      // n & 1  выполняет побитовую операцию "И" между  n  и  1 .
      // Это означает, что вычисляется побитовое "И" между двоичным
      // представлением  n  и двоичным представлением  1 .
      // Если последний бит двоичного представления  n  равен 1,
      // то это выражение также будет равно 1, в противном случае оно будет равно 0.
      n >>= 1;
    }
    return count;
  }

  // Функция сравнения для сортировки
  int compare(int x, int y) {
    var cx = countOnesInBinary(x);
    var cy = countOnesInBinary(y);
    return cx != cy ? cx - cy : x - y;
    // отрицательное число, если  x  должно быть расположено перед  y  в отсортированном массиве;
    // ноль, если порядок  x  и  y  не имеет значения;
    // положительное число, если  y  должно быть расположено перед  x  в отсортированном массиве
  }

  // Сортировка массива
  arr.sort(compare);

  return arr;
}